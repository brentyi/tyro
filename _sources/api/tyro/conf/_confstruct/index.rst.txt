:orphan:

:py:mod:`tyro.conf._confstruct`
===============================

.. py:module:: tyro.conf._confstruct


Module Contents
---------------

.. py:function:: subcommand(name: Optional[str] = None, *, default: Any = MISSING_NONPROP, description: Optional[str] = None, prefix_name: bool = True, constructor: None = None, constructor_factory: Optional[Callable[[], Union[Type, Callable]]] = None) -> Any
                 subcommand(name: Optional[str] = None, *, default: Any = MISSING_NONPROP, description: Optional[str] = None, prefix_name: bool = True, constructor: Optional[Union[Type, Callable]] = None, constructor_factory: None = None) -> Any


.. py:function:: arg(*, name: Optional[str] = None, metavar: Optional[str] = None, help: Optional[str] = None, prefix_name: bool = True, constructor: None = None, constructor_factory: Optional[Callable[[], Union[Type, Callable]]] = None) -> Any
                 arg(*, name: Optional[str] = None, metavar: Optional[str] = None, help: Optional[str] = None, prefix_name: bool = True, constructor: Optional[Union[Type, Callable]] = None, constructor_factory: None = None) -> Any

   
   Returns a metadata object for fine-grained argument configuration with
   ``typing.Annotated``. Should typically not be required.

   .. code-block:: python

      x: Annotated[int, tyro.conf.arg(...)]

   :param name: A new name for the argument.
   :param metavar: Argument name in usage messages. The type is used by default.
   :param help: Helptext for this argument. The docstring is used by default.
   :param prefix_name: Whether or not to prefix the name of the argument based on where
                       it is in a nested structure.
   :param constructor: A constructor type or function. This should either be (a) a subtype
                       of an argument's annotated type, or (b) a function with type-annotated
                       inputs that returns an instance of the annotated type. This will be used in
                       place of the argument's type for parsing arguments. No validation is done.
   :param constructor_factory: A function that returns a constructor type or function.
                               Useful when the constructor isn't immediately available.

   :returns: Object to attach via ``typing.Annotated[]``.

