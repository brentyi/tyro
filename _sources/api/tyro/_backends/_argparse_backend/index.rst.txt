:orphan:

:py:mod:`tyro._backends._argparse_backend`
==========================================

.. py:module:: tyro._backends._argparse_backend

.. autoapi-nested-parse::

   Argparse-based backend for parsing command-line arguments.



Module Contents
---------------

.. py:class:: ArgparseBackend


   Bases: :py:obj:`tyro._backends._base.ParserBackend`

   Backend that uses argparse for parsing command-line arguments.

   This is the original implementation, which constructs an argparse.ArgumentParser
   from the ParserSpecification and uses it to parse arguments. While robust and
   well-tested, it can be slow for complex command structures with many subcommands.

   .. py:method:: parse_args(parser_spec: tyro._parsers.ParserSpecification, args: Sequence[str], prog: str, return_unknown_args: bool, console_outputs: bool) -> tuple[dict[str | None, Any], list[str] | None]

      Parse command-line arguments using argparse.


   .. py:method:: get_parser_for_completion(parser_spec: tyro._parsers.ParserSpecification, prog: str | None, add_help: bool) -> tyro._backends._argparse_formatter.TyroArgumentParser

      Get an argparse parser for shell completion generation.



