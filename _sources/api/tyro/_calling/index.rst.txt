:orphan:

:py:mod:`tyro._calling`
=======================

.. py:module:: tyro._calling

.. autoapi-nested-parse::

   Core functionality for calling functions with arguments specified by argparse
   namespaces.



Module Contents
---------------

.. py:exception:: InstantiationError


   Bases: :py:obj:`Exception`

   Exception raised when instantiation fail; this typically means that values from
   the CLI are invalid.

   .. py:attribute:: message
      :type: str

      

   .. py:attribute:: arg
      :type: Union[tyro._arguments.ArgumentDefinition, str]

      


.. py:data:: T

   

.. py:function:: callable_with_args(f: Callable[Ellipsis, T], parser_definition: tyro._parsers.ParserSpecification, default_instance: Union[T, tyro._singleton.NonpropagatingMissingType], value_from_prefixed_field_name: Dict[str, Any], field_name_prefix: str) -> Tuple[Callable[[], T], Set[str]]

   Populate `f` with arguments specified by a dictionary of values from argparse.

   Returns a partialed version of `f` with arguments populated, and a set of
   used arguments.

   We return a `Callable[[], OutT]` instead of `T` directly for aesthetic
   reasons; it lets use reduce layers in stack traces for errors from
   functions passed to `tyro`.


