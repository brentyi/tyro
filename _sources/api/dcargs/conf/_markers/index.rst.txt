:orphan:

:py:mod:`dcargs.conf._markers`
==============================

.. py:module:: dcargs.conf._markers


Module Contents
---------------

.. py:class:: Marker

   Bases: :py:obj:`dcargs._singleton.Singleton`


.. py:data:: T
   

   

.. py:data:: POSITIONAL
   

   

.. py:data:: Positional
   

   
   A type ``T`` can be annotated as ``Positional[T]`` if we want to parse it as a positional
   argument.

.. py:data:: FIXED
   

   

.. py:data:: Fixed
   

   
   A type ``T`` can be annotated as ``Fixed[T]`` to prevent ``dcargs.cli`` from parsing it; a
   default value should be set instead. Note that fields with defaults that can't be parsed
   will also be marked as fixed automatically.

.. py:data:: SUPPRESS
   

   

.. py:data:: Suppress
   

   
   A type ``T`` can be annotated as ``Suppress[T]`` to prevent ``dcargs.cli`` from parsing it, and
   to prevent it from showing up in helptext.

.. py:data:: FLAG_CONVERSION_OFF
   

   

.. py:data:: FlagConversionOff
   

   
   Turn off flag conversion for booleans with default values. Instead, types annotated
   with ``bool`` will expect an explicit True or False.

   Can be used directly on boolean annotations, ``FlagConversionOff[bool]``\ , or recursively
   applied to nested types.

.. py:data:: AVOID_SUBCOMMANDS
   

   

.. py:data:: AvoidSubcommands
   

   
   Avoid creating subcommands when a default is provided for unions over nested types.
   This simplifies CLI interfaces, but makes them less expressive.

   Can be used directly on union types, ``AvoidSubcommands[Union[...]]``\ , or recursively
   applied to nested types.

