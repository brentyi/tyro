.. Comment: this file is automatically generated by `update_example_docs.py`.
   It should not be modified manually.

Enums
==========================================

In addition to literals, enums can also be used to provide a fixed set of
choices.


.. code-block:: python
        :linenos:


        import dataclasses
        import enum

        import tyro


        class OptimizerType(enum.Enum):
            ADAM = enum.auto()
            SGD = enum.auto()


        @dataclasses.dataclass(frozen=True)
        class TrainConfig:
            # Enums are handled seamlessly.
            optimizer_type: OptimizerType = OptimizerType.ADAM
            """Gradient-based optimizer to use."""

            learning_rate: float = 1e-4
            """Learning rate for optimizer."""


        if __name__ == "__main__":
            config = tyro.cli(TrainConfig)
            print(config)

------------

.. raw:: html

        <kbd>python 01_basics/08_enums.py --help</kbd>

.. program-output:: python ../../examples/01_basics/08_enums.py --help

------------

.. raw:: html

        <kbd>python 01_basics/08_enums.py --optimizer-type SGD</kbd>

.. program-output:: python ../../examples/01_basics/08_enums.py --optimizer-type SGD

------------

.. raw:: html

        <kbd>python 01_basics/08_enums.py --optimizer-type ADAM --learning-rate 3e-4</kbd>

.. program-output:: python ../../examples/01_basics/08_enums.py --optimizer-type ADAM --learning-rate 3e-4
