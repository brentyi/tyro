.. Comment: this file is automatically generated by `update_example_docs.py`.
   It should not be modified manually.

Subcommands from Functions
==========================================


:func:`tyro.extras.subcommand_cli_from_dict()` provides a shorthand that generates a
subcommand CLI from a dictionary.



.. code-block:: python
        :linenos:


        import tyro


        def checkout(branch: str) -> None:
            """Check out a branch."""
            print(f"{branch=}")


        def commit(message: str, all: bool = False) -> None:
            """Make a commit."""
            print(f"{message=} {all=}")


        if __name__ == "__main__":
            tyro.extras.subcommand_cli_from_dict(
                {
                    "checkout": checkout,
                    "commit": commit,
                }
            )

------------

.. raw:: html

        <kbd>python 02_nesting/05_subcommands_func.py --help</kbd>

.. program-output:: python ../../examples/02_nesting/05_subcommands_func.py --help

------------

.. raw:: html

        <kbd>python 02_nesting/05_subcommands_func.py commit --help</kbd>

.. program-output:: python ../../examples/02_nesting/05_subcommands_func.py commit --help

------------

.. raw:: html

        <kbd>python 02_nesting/05_subcommands_func.py commit --message hello --all</kbd>

.. program-output:: python ../../examples/02_nesting/05_subcommands_func.py commit --message hello --all

------------

.. raw:: html

        <kbd>python 02_nesting/05_subcommands_func.py checkout --help</kbd>

.. program-output:: python ../../examples/02_nesting/05_subcommands_func.py checkout --help

------------

.. raw:: html

        <kbd>python 02_nesting/05_subcommands_func.py checkout --branch main</kbd>

.. program-output:: python ../../examples/02_nesting/05_subcommands_func.py checkout --branch main
