.. Comment: this file is automatically generated by `update_example_docs.py`.
   It should not be modified manually.

3. Enums And Containers
==========================================


We can generate argument parsers from more advanced type annotations, like enums and
container types.



.. code-block:: python
       :linenos:

       import dataclasses
       import enum
       import pathlib
       from typing import Optional, Tuple
       
       import dcargs
       
       
       class OptimizerType(enum.Enum):
           ADAM = enum.auto()
           SGD = enum.auto()
       
       
       @dataclasses.dataclass(frozen=True)
       class TrainConfig:
           # Example of a variable-length tuple. `typing.List`, `typing.Sequence`,
           # `typing.Set`, `typing.Dict`, etc are all supported as well.
           dataset_sources: Tuple[pathlib.Path, ...]
           """Paths to load training data from. This can be multiple!"""
       
           # Fixed-length tuples are also okay.
           image_dimensions: Tuple[int, int] = (32, 32)
           """Height and width of some image data."""
       
           # Enums are handled seamlessly.
           optimizer_type: OptimizerType = OptimizerType.ADAM
           """Gradient-based optimizer to use."""
       
           # We can also explicitly mark arguments as optional.
           checkpoint_interval: Optional[int] = None
           """Interval to save checkpoints at."""
       
       
       if __name__ == "__main__":
           config = dcargs.cli(TrainConfig)
           print(config)

------------

.. raw:: html

        <kbd>python 03_enums_and_containers.py --help</kbd>

.. program-output:: python ../../examples/03_enums_and_containers.py --help

------------

.. raw:: html

        <kbd>python 03_enums_and_containers.py --dataset-sources ./data --image-dimensions 16 16</kbd>

.. program-output:: python ../../examples/03_enums_and_containers.py --dataset-sources ./data --image-dimensions 16 16

------------

.. raw:: html

        <kbd>python 03_enums_and_containers.py --dataset-sources ./data --optimizer-type SGD</kbd>

.. program-output:: python ../../examples/03_enums_and_containers.py --dataset-sources ./data --optimizer-type SGD
