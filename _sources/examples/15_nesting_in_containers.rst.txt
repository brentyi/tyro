.. Comment: this file is automatically generated by `update_example_docs.py`.
   It should not be modified manually.

15. Nesting In Containers
==========================================


Structures can be nested inside of standard containers.

Note that lengths must be inferrable, either via a fixed-length tuple annotation or by
parsing default values.



.. code-block:: python
        :linenos:


        import dataclasses
        from typing import Dict, Tuple

        import dcargs


        class Color:
            pass


        @dataclasses.dataclass
        class RGB(Color):
            r: int
            g: int
            b: int


        @dataclasses.dataclass
        class HSL(Color):
            h: int
            s: int
            l: int


        @dataclasses.dataclass
        class Args:
            # Example of specifying nested structures via a fixed-length tuple.
            color_tuple: Tuple[RGB, HSL]

            # Examples of nested structures in variable-length containers. These need a default
            # provided for length inference; we don't currently support specifying dynamic
            # container lengths directly from the commandline.
            color_tuple_alt: Tuple[Color, ...] = (
                RGB(255, 0, 0),
                HSL(0, 255, 0),
            )
            color_map: Dict[str, RGB] = dataclasses.field(
                # We can't use mutable values as defaults directly.
                default_factory={
                    "red": RGB(255, 0, 0),
                    "green": RGB(0, 255, 0),
                    "blue": RGB(0, 0, 255),
                }.copy
            )


        if __name__ == "__main__":
            args = dcargs.cli(Args)
            print(args)

------------

.. raw:: html

        <kbd>python 15_nesting_in_containers.py --help</kbd>

.. program-output:: python ../../examples/15_nesting_in_containers.py --help
