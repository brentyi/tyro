.. Comment: this file is automatically generated by `update_example_docs.py`.
   It should not be modified manually.

Decorator-based Subcommands
==========================================

:func:`tyro.extras.SubcommandApp()` provides a decorator-based API for
subcommands, which is inspired by `click <https://click.palletsprojects.com/>`_.


.. code-block:: python
        :linenos:


        from tyro.extras import SubcommandApp

        app = SubcommandApp()


        @app.command
        def greet(name: str, loud: bool = False) -> None:
            """Greet someone."""
            greeting = f"Hello, {name}!"
            if loud:
                greeting = greeting.upper()
            print(greeting)


        @app.command(name="addition")
        def add(a: int, b: int) -> None:
            """Add two numbers."""
            print(f"{a} + {b} = {a + b}")


        if __name__ == "__main__":
            app.cli()

------------

.. raw:: html

        <kbd>python 04_additional/15_decorator_subcommands.py --help</kbd>

.. program-output:: python ../../examples/04_additional/15_decorator_subcommands.py --help

------------

.. raw:: html

        <kbd>python 04_additional/15_decorator_subcommands.py greet --help</kbd>

.. program-output:: python ../../examples/04_additional/15_decorator_subcommands.py greet --help

------------

.. raw:: html

        <kbd>python 04_additional/15_decorator_subcommands.py greet --name Alice</kbd>

.. program-output:: python ../../examples/04_additional/15_decorator_subcommands.py greet --name Alice

------------

.. raw:: html

        <kbd>python 04_additional/15_decorator_subcommands.py greet --name Bob --loud</kbd>

.. program-output:: python ../../examples/04_additional/15_decorator_subcommands.py greet --name Bob --loud

------------

.. raw:: html

        <kbd>python 04_additional/15_decorator_subcommands.py addition --help</kbd>

.. program-output:: python ../../examples/04_additional/15_decorator_subcommands.py addition --help

------------

.. raw:: html

        <kbd>python 04_additional/15_decorator_subcommands.py addition --a 5 --b 3</kbd>

.. program-output:: python ../../examples/04_additional/15_decorator_subcommands.py addition --a 5 --b 3
