.. Comment: this file is automatically generated by `update_example_docs.py`.
   It should not be modified manually.

Pydantic
==========================================


In addition to standard dataclasses, ``tyro`` also supports
`Pydantic <https://github.com/pydantic/pydantic>`_ models.



.. code-block:: python
        :linenos:


        from pydantic import BaseModel, Field

        import tyro


        class Args(BaseModel):
            """Description.
            This should show up in the helptext!"""

            field1: str
            field2: int = Field(3, description="An integer field.")


        if __name__ == "__main__":
            args = tyro.cli(Args)
            print(args)

------------

.. raw:: html

        <kbd>python 04_additional/08_pydantic.py --help</kbd>

.. program-output:: python ../../examples/04_additional/08_pydantic.py --help

------------

.. raw:: html

        <kbd>python 04_additional/08_pydantic.py --field1 hello</kbd>

.. program-output:: python ../../examples/04_additional/08_pydantic.py --field1 hello

------------

.. raw:: html

        <kbd>python 04_additional/08_pydantic.py --field1 hello --field2 5</kbd>

.. program-output:: python ../../examples/04_additional/08_pydantic.py --field1 hello --field2 5
