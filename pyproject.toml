[tool.poetry]
name = "tyro"
version = "0.3.37"
description = "Strongly typed, zero-effort CLI interfaces"
authors = ["brentyi <brentyi@berkeley.edu>"]
include = ["./tyro/**/*"]
readme = "README.md"
repository = "https://github.com/brentyi/tyro"
homepage = "https://github.com/brentyi/tyro"
documentation = "https://brentyi.github.io/tyro/"

[tool.poetry.dependencies]
python = "^3.7"
docstring-parser = "^0.14.1"
typing-extensions = "^4.3.0"
PyYAML = "^6.0"
"backports.cached-property" = { version = "^1.0.2", python = "~3.7" }
colorama = {version = "^0.4.0", platform = "win32"}
frozendict = "^2.3.4"
rich = ">=11.1.0"
shtab = "^1.5.6"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
omegaconf = "^2.2.2"
attrs = "^21.4.0"
torch = "^1.10.0"
pyright = "^1.1.264"
mypy = "^0.991"
numpy = ">=1.20.0"
flax = "^0.6.0"
pydantic = "^1.10.2"
coverage = {extras = ["toml"], version = "^6.5.0"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true
warn_unused_configs = true

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't compute coverage for abstract methods, properties
    "@abstract",
    "@abc\\.abstract",

    # or warnings
    "warnings",

    # or empty function bodies
    "pass",
    "\\.\\.\\.",

    # or typing imports
    "TYPE_CHECKING",

    # or assert statements & errors
    "assert",

    # or anything that's not implemented
    "NotImplementedError()",

    # or fallback imports
    "except ImportError:",

    # or anything that's deprecated
    "deprecated",
]
