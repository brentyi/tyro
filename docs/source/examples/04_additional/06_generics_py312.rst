.. Comment: this file is automatically generated by `update_example_docs.py`.
   It should not be modified manually.

Generic Types (Python 3.12+ syntax)
==========================================


Example of parsing for generic dataclasses using syntax introduced in Python
3.12. Note: this is not compatible with ``from __future__ import annotations``.



.. code-block:: python
        :linenos:


        import dataclasses

        import tyro


        @dataclasses.dataclass(frozen=True)
        class Point3[ScalarType: (int, float)]:
            x: ScalarType
            y: ScalarType
            z: ScalarType
            frame_id: str


        @dataclasses.dataclass(frozen=True)
        class Triangle:
            a: Point3[float]
            b: Point3[float]
            c: Point3[float]


        @dataclasses.dataclass(frozen=True)
        class Args[ShapeType]:
            shape: ShapeType


        if __name__ == "__main__":
            args = tyro.cli(Args[Triangle])
            print(args)

------------

.. raw:: html

        <kbd>python 04_additional/06_generics_py312.py --help</kbd>

.. program-output:: python ../../examples/04_additional/06_generics_py312.py --help
